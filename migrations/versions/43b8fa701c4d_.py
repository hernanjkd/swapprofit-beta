"""empty message

Revision ID: 43b8fa701c4d
Revises: 
Create Date: 2021-03-05 09:56:35.872053

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '43b8fa701c4d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('casinos',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=20), nullable=True),
    sa.Column('zip_code', sa.String(length=14), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('time_zone', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('facebook', sa.String(length=50), nullable=True),
    sa.Column('twitter', sa.String(length=50), nullable=True),
    sa.Column('instagram', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('status', sa.Enum('valid', 'invalid', 'suspended', name='userstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('nickname', sa.String(length=100), nullable=True),
    sa.Column('hendon_url', sa.String(length=200), nullable=True),
    sa.Column('profile_pic_url', sa.String(length=250), nullable=True),
    sa.Column('roi_rating', sa.Float(), nullable=True),
    sa.Column('swap_rating', sa.Float(), nullable=True),
    sa.Column('swap_availability_status', sa.Enum('active', 'unavailable', name='swapavailabilitystatus'), nullable=True),
    sa.Column('naughty', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('buyin_update', sa.Boolean(), nullable=True),
    sa.Column('swap_update', sa.Boolean(), nullable=True),
    sa.Column('event_update', sa.Boolean(), nullable=True),
    sa.Column('chat_update', sa.Boolean(), nullable=True),
    sa.Column('coin_update', sa.Boolean(), nullable=True),
    sa.Column('result_update', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hendon_url')
    )
    op.create_table('tournaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('results_link', sa.String(length=256), nullable=True),
    sa.Column('structure_link', sa.String(length=500), nullable=True),
    sa.Column('blinds', sa.String(length=20), nullable=True),
    sa.Column('buy_in_amount', sa.String(length=20), nullable=True),
    sa.Column('starting_stack', sa.String(length=20), nullable=True),
    sa.Column('place', sa.String(length=100), nullable=True),
    sa.Column('duration', sa.DateTime(), nullable=True),
    sa.Column('custom', sa.Boolean(), nullable=True),
    sa.Column('accessibility', sa.Enum('invite_only', 'unlisted', 'open', name='tournamentaccessibility'), nullable=True),
    sa.Column('status', sa.Enum('open', 'closed', 'waiting_results', name='tournamentstatus'), nullable=True),
    sa.Column('casino_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['casino_id'], ['casinos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user1_id', sa.Integer(), nullable=True),
    sa.Column('user2_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('opened', 'closed', name='chatstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user1_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['user2_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('day', sa.String(length=5), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('full_name', sa.String(length=40), nullable=True),
    sa.Column('place', sa.String(length=6), nullable=True),
    sa.Column('winnings', sa.String(length=30), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('swaps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('counter_swap_id', sa.Integer(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('percentage', sa.Integer(), nullable=False),
    sa.Column('due_at', sa.DateTime(), nullable=True),
    sa.Column('paid', sa.Boolean(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('disputed', sa.Boolean(), nullable=True),
    sa.Column('disputed_at', sa.DateTime(), nullable=True),
    sa.Column('swap_rating', sa.Integer(), nullable=True),
    sa.Column('result_winnings', sa.Boolean(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('agreed', 'pending', 'incoming', 'rejected', 'canceled', 'counter_incoming', name='swapstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['counter_swap_id'], ['swaps.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('coins', sa.Integer(), nullable=False),
    sa.Column('dollars', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('buy_ins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('flight_id', sa.Integer(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('receipt_img_url', sa.String(length=250), nullable=True),
    sa.Column('chips', sa.Integer(), nullable=True),
    sa.Column('table', sa.String(length=20), nullable=True),
    sa.Column('seat', sa.Integer(), nullable=True),
    sa.Column('place', sa.String(length=6), nullable=True),
    sa.Column('winnings', sa.String(length=30), nullable=True),
    sa.Column('player_name', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('active', 'busted', 'cashed', 'bagged', 'pending', name='buyinstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('messages')
    op.drop_table('buy_ins')
    op.drop_table('transactions')
    op.drop_table('swaps')
    op.drop_table('results')
    op.drop_table('flights')
    op.drop_table('devices')
    op.drop_table('chats')
    op.drop_table('tournaments')
    op.drop_table('profiles')
    op.drop_table('users')
    op.drop_table('casinos')
    # ### end Alembic commands ###
